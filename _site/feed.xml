<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Your awesome title</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>http://yourdomain.com/</link>
    <atom:link href="http://yourdomain.com/feed.xml" rel="self" type="application/rss+xml"/>
<<<<<<< HEAD
    <pubDate>Thu, 08 Mar 2018 14:15:36 +0800</pubDate>
    <lastBuildDate>Thu, 08 Mar 2018 14:15:36 +0800</lastBuildDate>
=======
    <pubDate>Fri, 09 Feb 2018 20:34:32 +0800</pubDate>
    <lastBuildDate>Fri, 09 Feb 2018 20:34:32 +0800</lastBuildDate>
>>>>>>> a195a7c54879d03952c118bd8fa86a99579fc9f2
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>NOIWC2018游记</title>
        <description>&lt;p&gt;到长沙&lt;del&gt;玩了一发&lt;/del&gt;参加了NOI2018冬眠营，然后因为太弱正解基本都没听懂，但是学了一堆的奇奇怪怪的东西，像什么分析方法乱搞骗分之类的，这里把个人认为比较好的idea不完全列举如下。&lt;del&gt;不过感觉拿出去应该都是烂大街的东西。&lt;/del&gt;&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;势能函数分析&lt;/h3&gt;

&lt;p&gt;为了分析算法的时间复杂度/正确性等，我们引入当前状态的势能函数，然后证明每次操作势能函数的变化量一定满足一些条件，来推出算法的时间复杂度/正确性是对的。&lt;/p&gt;

&lt;p&gt;比如说我们现在要证明一个算法跑出的解不会超过最优解的 $k$ 倍，那么我们就引入势能函数 $\phi$ 代表当前我们的状态下我们离最优解差多少（这里 $\phi$ 的设计需要比较合理），然后假设最优解和我们分别操作一轮，最优解使 $\phi$ 增大了 $kd$，而我们的操作使 $\phi$ 减少了 $d$，那么我们就证明出了我们的算法跑出的解确实不会超过最优解的 $k$ 倍。&lt;/p&gt;

&lt;p&gt;这样做便于数学表述。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;判断点在多边形内&lt;/h3&gt;

&lt;p&gt;你不一定要作射线去跟多边形交，可以作折线，这样就可以支持特定情况下点的移动了（比如网格图里面）。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;遗传算法的全过程&lt;/h3&gt;

&lt;p&gt;//预计开一个新坑，然后配一道题来说，后面可能会把链接挂过来。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;蚁群算法的全过程&lt;/h3&gt;

&lt;p&gt;//同上。&lt;/p&gt;

&lt;h3 id=&quot;fft&quot;&gt;FFT的物理意义&lt;/h3&gt;

&lt;p&gt;其实我最早学FFT的时候是这样的：&lt;/p&gt;

&lt;p&gt;-要学FFT肯定要先学FT呀！&lt;/p&gt;

&lt;p&gt;（学了好久好久的FT，爆肝物理）&lt;/p&gt;

&lt;p&gt;-我大概了解FT在干什么了。那么FFT呢？&lt;/p&gt;

&lt;p&gt;（开始看FFT）&lt;/p&gt;

&lt;p&gt;-FFT和FT有什么关系么！你说时域转成频域就可以做乘积，然后就贴了一个板子，这个板子是在做什么呀！&lt;/p&gt;

&lt;p&gt;（滚回去继续理解FT）&lt;/p&gt;

&lt;p&gt;-完全无法理解[托腮]&lt;/p&gt;

&lt;p&gt;（最后还是选择了背板）&lt;/p&gt;

&lt;p&gt;然后大概这次才是基本弄清楚了FT到底是怎么到FFT的。实际上大概就是物理是玩这个世界，然后玩着玩着开始推数学，但是数学是造一个世界自己玩，然后就越玩越远了x&lt;/p&gt;

&lt;p&gt;不过FT还是确实挺有用的（看起来Praat这个软件就是跑了个FT来分析共振峰，共振峰分析在语音学上也还是蛮有用的吧。所以说各个学科还是相互服务的。）&lt;/p&gt;

&lt;p&gt;具体大约要看松松松的课件我在这里可能讲不清楚x&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;从现有的算法来看待问题，尤其是交互式题目&lt;/h3&gt;

&lt;p&gt;比如说像营里面课上有一个交互题，题意是这样的：有一张&lt;strong&gt;有向图&lt;/strong&gt;，$n$ 个点，每个点是一个房间，度数为 $m$ ，即从房间有 $m$ 条长得一模一样的通道连出去，房间的正中间有一个石子（后面的石子可能就被移动不在中间了），你每次在一个房间里的时候可以把石子放到一条通道的左边或者右边，然后选择一条通道走出去。这里因为通道长得一样，所以你的参照物是石子，你放置石子或者走通道只能够说”我选择我刚进入这个房间的时候房间里面石子的位置顺时针转过多少个通道的那个通道“。你被随机丢到了一个房间里面，你需要遍历这个图。&lt;/p&gt;

&lt;p&gt;然后就是Tarjan改版，记一下返祖边和横叉边。&lt;/p&gt;

&lt;p&gt;还有后面比赛的题目，有一颗树，一开始只有 $1$ 已知，每一次你需要选择一个已知点 $x$ 和一个点 $y$ ，然后交互库会返回 $x$ 到 $y$ 路径上离 $x$ 最近的点 $z$，并且如果 $z$ 是未知点，它就会被标记成已知点（开地图过程）。然后你需要用 $nlogn$ 级别的操作次数开完整个地图。&lt;/p&gt;

&lt;p&gt;利用替罪羊树的重构思想可以高分甚至 $AC$。&lt;/p&gt;

&lt;h3 id=&quot;section-5&quot;&gt;一些长得像“树上最长链”一样的问题的近似求解&lt;/h3&gt;

&lt;p&gt;可以使用类似于找最长链的方法，找一个基准点，找到离它最远的点，接着以这个点为基准点重复上面的操作，多次迭代，并且多选几次基准点，就有可能跑出优秀的解。&lt;/p&gt;

&lt;h3 id=&quot;etc&quot;&gt;etc…&lt;/h3&gt;

&lt;p&gt;然后学着学着就比赛了，比赛的时候T2看错题意，居然直接过了大样例，出考场完听别人说题面出锅了我才发现自己看错了题意。于是就因为这个看错题意节省了一堆时间，但是最后T1还是有12分暴力没调出来，最后就滚粗了。而且感觉自己预支了省选的RP[害怕.jpg]。&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Feb 2018 00:00:00 +0800</pubDate>
        <link>http://yourdomain.com/2018/02/08/NOIWC2018%E6%B8%B8%E8%AE%B0.html</link>
        <guid isPermaLink="true">http://yourdomain.com/2018/02/08/NOIWC2018%E6%B8%B8%E8%AE%B0.html</guid>
        
        
      </item>
    
  </channel>
</rss>
