<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>alphaGem&#39;s blog</title>
    <description>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</description>
    <link>https://alphagem.github.io/</link>
    <atom:link href="https://alphagem.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 17 Jul 2018 21:06:53 +0800</pubDate>
    <lastBuildDate>Tue, 17 Jul 2018 21:06:53 +0800</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>NOI2018游记Day0.5</title>
        <description>&lt;p&gt;NOI2018系列游记Day0.5。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;插曲&lt;/h3&gt;

&lt;p&gt;前一天晚上，刚睡下去，却被一阵喧闹吵醒。&lt;/p&gt;

&lt;p&gt;是舍管要求所有换了房间的人换回去。&lt;/p&gt;

&lt;p&gt;十点熄灯，这么晚熄灯就算了，你们还在十点半吵醒人。&lt;del&gt;是不是想杀了我啊！&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;（不行，要保持良好形象，不能说这种暴力的话。）&lt;/p&gt;

&lt;p&gt;最后当晚大家还是没有换宿舍。&lt;/p&gt;

&lt;p&gt;这一天早上，想要冲咖啡，结果倒完咖啡粉发现按下开水按钮出来的水是冷的……&lt;/p&gt;

&lt;p&gt;凉凉。&lt;/p&gt;

&lt;p&gt;不过好的事情是，早上去阳台的时候看见两栋宿舍间不知道什么树上的花开了，粉色的一团一团给阳光照着，甚是可爱。还有一种树叶呈现紫红色的树，也来这里增添色彩。什么东西到了阳光底下都要变得明亮而鲜活，于是一块逼仄的地方就有了许多种鲜亮的光泽。&lt;/p&gt;

&lt;p&gt;对，出了门，阳光照下来的那一刻，我觉得大概我也变得明亮而鲜活。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;笔试与试机&lt;/h3&gt;

&lt;p&gt;笔试试机的时间被和开幕式对调了。&lt;/p&gt;

&lt;p&gt;笔试简单得很。十分钟穿掉不是什么难事。&lt;/p&gt;

&lt;p&gt;题目示例（可能与原题有所不符，但精神上类似）：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;如果程序在运行过程中超出内存限制，那么__$1__&lt;/p&gt;

  &lt;p&gt;Selection 1:&lt;/p&gt;

  &lt;p&gt;A. 程序无法正常运行，该测试点得满分。&lt;/p&gt;

  &lt;p&gt;B. 程序无法正常运行，该测试点得零分。&lt;/p&gt;

  &lt;p&gt;C. 程序可以正常运行，该测试点得零分。&lt;/p&gt;

  &lt;p&gt;D. 程序无法正常运行，该测试点得一半分数。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;唔。&lt;/p&gt;

&lt;p&gt;接着是试机。试验了一下Gedit的外挂shell功能能不能用，写了个a+b，然后玩了一两个小时的python画图。&lt;/p&gt;

&lt;p&gt;画图的内容主要是根据牛顿迭代的次数和结果对复平面上的点进行上色。迭代到不同的解上不同的颜色，迭代次数越多上的颜色越深。&lt;/p&gt;

&lt;p&gt;一开始画的是很特殊的多项式 $f(x)=x^5-1$ （这是从维基百科上看来的，似乎是条目“吸引子”里的，要么就是什么关系很近的条目）。这只是为了测试一下画图能不能用。接着试了一些平凡的多项式（多项式用它的各个根给出，最前面的系数为1，毕竟这里系数不是很重要），效果并不理想，画出来的图形都很难看。于是测试了一些特殊的东西——比如说，在等边三角形上取三个顶点和三个中点作为根。画出来的图形就漂亮了很多。然而因为配色是随便上的，所以还是有点糟糕。懒得调配色了，于是就回了宿舍。&lt;/p&gt;

&lt;p&gt;结果发现没有WiFi，又要出门。&lt;/p&gt;

&lt;p&gt;呜呼！WiFi与空调不可兼得……&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;开幕式&lt;/h3&gt;

&lt;p&gt;拉德茨基进行曲、红旗颂、Hot Chocolate……&lt;/p&gt;

&lt;p&gt;热。&lt;/p&gt;

&lt;p&gt;毕竟杜子德都说了：“太热了，不讲了。”&lt;/p&gt;

&lt;p&gt;气氛也是很火热的。毕竟大家一起尬就不尬了。&lt;/p&gt;

&lt;p&gt;我怀疑这是广东省队的阴谋，他们只想吃清蒸福建人……&lt;/p&gt;

&lt;p&gt;啊，对，明年NOI，广州，希望不要被吃掉……&lt;/p&gt;

&lt;p&gt;然后大家一起在下面拍了照，就去吃饭。冷饮和瓜真的非常好评。吹爆绿豆冰沙。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;天空的颜色&lt;/h3&gt;

&lt;p&gt;吃完晚饭。&lt;/p&gt;

&lt;p&gt;实在不想去阅览室——太热。&lt;/p&gt;

&lt;p&gt;也不想回宿舍——没网。&lt;/p&gt;

&lt;p&gt;于是在外面到处转悠（真的，外面要比阅览室凉快，尤其是风吹过来的时候），一点一点数着天空的颜色……&lt;/p&gt;

&lt;p&gt;一开始是西方呈现出黄色而东方与天顶呈现出蓝色。中间用很浅的灰绿色过渡过去。然后西方一点一点转成橙色，然后转成朱红。整个天由蓝色慢慢转向蓝灰色。其间在北方靠近地平线的位置是紫色。&lt;/p&gt;

&lt;p&gt;过了一会儿，太阳终于要完全失去它的光亮了。西方的天空从下往上是从红色到青色再到蓝灰（靠近地平线的云有一丝红紫），顺序像彩虹一样排布，但不如彩虹鲜亮。这时候，月亮和金星已经很明显地挂在西天蓝灰的背景下了，南边的木星和土星也清晰可见。努力看看，可以依稀辨别出大角以及心宿二。&lt;/p&gt;

&lt;p&gt;Heavens-above告诉我八点有一个人造卫星过境，于是就看了看。最大亮度0.7，在天还没有完全暗下来的时候隐约能看见一个光点划过南天。&lt;/p&gt;

&lt;p&gt;然后后面到九点为止还有四个人造卫星。&lt;/p&gt;

&lt;p&gt;于是先回宿舍休息，然而一进空调房就不想出去了orz……&lt;/p&gt;

&lt;p&gt;在空间里面也看到了几张ycy拍的福州的照片：夕阳以一个微妙的角度从地平线下射上来，打在灰色的积云上，把积云的底部染成橙色或者红色，十分炫酷。&lt;/p&gt;

&lt;p&gt;早晨和傍晚总是色彩最丰富的时候。&lt;/p&gt;

&lt;p&gt;然而这么多的色彩放在一起，居然很协调。&lt;/p&gt;

&lt;p&gt;不由得想起今天上午配色失败的例子。&lt;/p&gt;

&lt;p&gt;C’est la nature.&lt;/p&gt;
</description>
        <pubDate>Tue, 17 Jul 2018 00:00:00 +0800</pubDate>
        <link>https://alphagem.github.io/2018/07/17/NOI2018%E6%B8%B8%E8%AE%B0Day0.5.html</link>
        <guid isPermaLink="true">https://alphagem.github.io/2018/07/17/NOI2018%E6%B8%B8%E8%AE%B0Day0.5.html</guid>
        
        <category>信息竞赛</category>
        
        <category>NOI</category>
        
        
        <category>OI</category>
        
      </item>
    
      <item>
        <title>NOI2018游记Day0</title>
        <description>&lt;p&gt;NOI2018系列游记Day0。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;灰白蓝&lt;/h3&gt;

&lt;p&gt;福州，天空阴沉，看不出一点早晨的样子。&lt;/p&gt;

&lt;p&gt;天上的江河与漩涡凝为钢铁和玻璃。&lt;/p&gt;

&lt;p&gt;地上的钢铁和玻璃流成江河与漩涡。&lt;/p&gt;

&lt;p&gt;于是夹杂在被醒目的黄白栅栏分成东西两股的不绝流动的钢铁和玻璃中。回头看不到这股洪流从哪里来，向前也看不到这股洪流到哪里为止。&lt;/p&gt;

&lt;p&gt;好在时间没有算得太离谱，及时赶到了火车站，搭上高铁。&lt;/p&gt;

&lt;p&gt;似乎到处铁路沿线的风景都是一样的，只要不是在漆黑的隧道里，那就要么是离离两岸夹流水，桥梁跨江过；要么是茫远青山断平野，农户散其间；偶尔能看到一点城市的样子，又或者，更多的也许是什么“铁路经济试验区”，摆着一堆建造到一半的楼房设施一类，满眼都是除去了植物的翻过的暴露的赭红的土壤。唯有窗外的的天晦明变化，但也不外乎蓝白灰三种颜色……&lt;/p&gt;

&lt;p&gt;真的没有不同么！&lt;/p&gt;

&lt;p&gt;我觉得是有的。我回去的时候一定要认真看看。&lt;/p&gt;

&lt;p&gt;看不出不同，大约是在车上背笔试题的缘故。使用了Anki，感觉确实很不错，比起拿着纸质材料盯着看效率要高许多。同时还发现了坐在隔壁的E.Space声称自己背好了笔试，然而一考，却是一问三不知，连忙也帮他复习了一下笔试。&lt;/p&gt;

&lt;p&gt;中午在车上睡了一觉，下午便到了长沙。长沙也甚炎热，和福州要不相上下——尤其是蓝天白云，衬得阳光更为耀眼。尤其是我们被闷在车库排队安检上车的时候，好像是两股力量在相抗争，一个要把自己身上的水挤出来，一个要把自己身上的水压回去……到了学校，便好了许多（毕竟有空调）。&lt;/p&gt;

&lt;p&gt;宿舍是三人间，原是按照省选排名安排的，各个学校都被打散了。一阵重排以后，我作为我们学校四个人中唯一的高一选手，也是唯一的D，自然就被排得混进了其它学校。在宿舍划了一阵水，眼看饭点要到了，于是出门吃饭——食堂门口大排长龙，未到饭点没有开饭。转进作为休息室的学生书吧，遍历了一遍书籍，突然一本书让我一震：这是江本胜的书《水知道答案》。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;《水知道答案》&lt;/h3&gt;

&lt;p&gt;你说谁知道答案？&lt;/p&gt;

&lt;p&gt;江本胜的《水知道答案》，可谓是最出名的民科大作之一了。最早读到这本书的时候是在少儿图书馆。当时很震惊，我都不知道答案的事情，水怎么知道答案？欣喜，悲哀，热爱，憎恨，感谢，复仇，帮助，霸凌，这是算不透的人心，至少是我，一只由各种不那么简单的碳基有机物组合而成的生物，算不透的。然后，你告诉我，一群由氢和氧构成的完全相同的分子能够感知并领会这一切……&lt;/p&gt;

&lt;p&gt;然而现在看着这本书上精美的插图，脑子里只有两个念头：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;插图真漂亮。&lt;/li&gt;
  &lt;li&gt;怀疑是每个人都必须要有的技能。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;不知道这样的书怎么还会在这里出现。怕不是学校按照什么不是很好的书单买了书，然后就把这本书放在了这里。&lt;/p&gt;

&lt;p&gt;但是人心究竟怎么算……算不透。&lt;/p&gt;

&lt;p&gt;于是只好按着自己的来算。己所不欲，勿施于人。欲加指责，先省己身。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;晚饭与彩排&lt;/h3&gt;

&lt;p&gt;伙食很好。（40元一人的餐标能不好么……）&lt;/p&gt;

&lt;p&gt;彩排开始了。听完主持人介绍流程，我可以完全确定的事情是，这是把几百号人放在一起，互相公开处刑。&lt;/p&gt;

&lt;p&gt;流程大概是这样的：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;主持人喊出“XX代表队”，该省代表队即起立，大屏幕上会出现省队中每个人的&lt;strong&gt;证件照&lt;/strong&gt;，接着该队伍向着大屏幕挥手，相机指向该队伍，队伍被投放在大屏幕上。然后该队伍喊出他们事先准备好的口号。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;证件照。&lt;/p&gt;

&lt;p&gt;就不能提前跟我们说说，我们修修图啊……&lt;/p&gt;

&lt;p&gt;福建的口号是什么？&lt;/p&gt;

&lt;p&gt;“超越极限，超越自我，不鸣则已，一鸣惊人。”&lt;/p&gt;

&lt;p&gt;哦对，后来还追加了一句“福建加油”。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;超越极限，超越自我，不鸣则已，一鸣惊人。福建加油！&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;五个土味四字短句，两两不押韵。&lt;/p&gt;

&lt;p&gt;而且超越极限翻译成英文就是limit exceeded。&lt;/p&gt;

&lt;p&gt;大吉大利！&lt;/p&gt;

&lt;p&gt;我真是……&lt;/p&gt;

&lt;p&gt;不过我似乎也没有资格指责他们。毕竟我自己写的也很土味……&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;赫赫商宿起东南，锋芒乍现，青青子衿敢为天下先。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;啊……以五十步笑百步，何如？&lt;/p&gt;

&lt;p&gt;我觉得还是我旁边一个同学提的口号正经一点。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;三分天注定，六百九十七分靠打拼。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;嗯。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;寝&lt;/h3&gt;

&lt;p&gt;寝。&lt;/p&gt;
</description>
        <pubDate>Mon, 16 Jul 2018 00:00:00 +0800</pubDate>
        <link>https://alphagem.github.io/2018/07/16/NOI2018%E6%B8%B8%E8%AE%B0Day0.html</link>
        <guid isPermaLink="true">https://alphagem.github.io/2018/07/16/NOI2018%E6%B8%B8%E8%AE%B0Day0.html</guid>
        
        <category>信息竞赛</category>
        
        <category>NOI</category>
        
        
        <category>OI</category>
        
      </item>
    
      <item>
        <title>神奇的编译器除法优化</title>
        <description>&lt;p&gt;写了个题（有-O2），然后为了刷常数开始读汇编，发现int的取模操作需要判断符号位，会多好几个汇编语句，于是改成了unsigned，果然快了一些。但是我又瞟了一眼代码，突然看见一个奇怪的magic number。我突然意识到，编译时真正的玄妙之处不在这里……我看了半天，才从字缝里看出字来，原来满屏幕写的是两个字“优化”！&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;化除为乘&lt;/h3&gt;

&lt;p&gt;众所周知，除法是一个很慢的东西。要是能规避除法，就太好啦。&lt;/p&gt;

&lt;p&gt;如果没有特殊说明，以下的变量类型都会是unsigned int，这样不用考虑符号位会比较方便。实际上，如果是int，编译器也会做类似的优化，只不过它会多判断一下符号位。&lt;/p&gt;

&lt;p&gt;考虑以下代码&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;	&lt;span class=&quot;cp&quot;&gt;#include&amp;lt;bits/stdc++.h&amp;gt;
&lt;/span&gt;	&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;std&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100007&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mod&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%u&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;可以看到，这里需要计算许多的模运算。来看看模运算在汇编里会是怎么实现的——&lt;/p&gt;

&lt;p&gt;假设我们求的是 $a\ \text{mod}\ b$,其中a已经被挪到寄存器%eax里，b已经被挪到寄存器%ebx里了。最终我们的目的是把商放进寄存器%eax里。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;divl	%ebx
movl	%edx, %eax
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这里调用了div指令。div指令是除法指令，它会同时计算除法的商和余数，并把除法得到的余数放在寄存器%edx里，接着只要搬到%eax里就好。&lt;/p&gt;

&lt;p&gt;所以说如果使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;g++ a.cpp -S -o a.s &lt;/code&gt; 你会得到如下汇编（这里仅贴出main函数到print以前的部分）&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;main:
.LFB3609:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movl	$0, -12(%rbp)
	movl	$3, -8(%rbp)
	movl	$100007, -4(%rbp)
.L3:
	cmpl	$300000000, -8(%rbp)
	ja	.L2
	movl	-8(%rbp), %eax
	movl	$0, %edx
	divl	-4(%rbp)
	movl	%edx, %eax
	xorl	%eax, -12(%rbp)
	addl	$3, -8(%rbp)
	jmp	.L3
.L2:
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;也就是说，它忠实地逐字逐句地翻译了一切你写的代码，翻译成人话大概是这样：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;在栈里申请三个变量：
	第一个初值设为0，相对栈顶位移为-12；
	第二个初值设为3，相对栈顶位移为-8；
	第三个初值设为100007，相对栈顶位移为-4。
设定标签L3。
	如果第二个变量比300000000大了，跳转到标签2，也就是退出循环。
	把第二个变量挪到寄存器%eax里面。
	把寄存器%edx清零。
	把第三个变量执行“除”操作。
	把“除”操作放在%edx里面的余数搬到%eax里面。
	让第一个变量xor上%eax里面的东西。
	让第二个变量+3。
	跳转到标签L3。
设定标签L2。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;但是当你开了-O2，使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;g++ a.cpp -O2 -S -o a.s &lt;/code&gt; ，情况就大有不同。&lt;/p&gt;

&lt;p&gt;汇编代码会长成这样：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;main:
.LFB3712:
	.cfi_startproc
	movl	$3, %ecx
	xorl	%esi, %esi
	movl	$-1480414547, %edi
	.p2align 4,,10
	.p2align 3
.L2:
	movl	%ecx, %eax
	mull	%edi
	movl	%ecx, %eax
	addl	$3, %ecx
	shrl	$16, %edx
	imull	$100007, %edx, %edx
	subl	%edx, %eax
	xorl	%eax, %esi
	cmpl	$300000003, %ecx
	jne	.L2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;于是你惊奇地发现居然div操作不见了。它用了一些右移、乘法和减法实现了模运算。&lt;/p&gt;

&lt;p&gt;让我们把它翻译成人话。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;把寄存器%ecx赋值为3。
	实际上，这里的%ecx是一个寄存器变量，它相当于源代码中的i。
	以下我们会用i称呼它。
把寄存器%esi清零。（自己xor上自己当然是清零啦）
	实际上，这里的%esi是一个寄存器变量，它相当于源代码中的s。
	以下我们会用s称呼它。
把寄存器%edi赋值为-1480414547。
	也就是二进制的0b10100111110000101010101010101101。
	这是编译器算出的一个magic number。
	以下我们会用m称呼它。
定义标签L2。
	把i挪到%eax里。
	把%eax乘上m。
		注意：像这样的32位乘法的运算中：
			低32位会被放到%eax里；
			高32位不会被立即丢弃，而会被放到%edx里。
	把i挪到%eax里。（因为%eax刚被乘法洗了）
	i+=3。
	把%edx的东西右移16位，再乘上100007。
	把%eax减去%edx。
	把s给xor上%eax。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;尽管翻译成了人话。但是还是看不懂系列……尤其是那个奇怪的数字是什么东西啊喂！&lt;/p&gt;

&lt;p&gt;它在干什么呢？&lt;/p&gt;

&lt;p&gt;显然，%edi中的神奇数字是一个非常关键的突破口。&lt;/p&gt;

&lt;p&gt;我们把它化为unsigned类型，则有 $m=2814552749$。&lt;/p&gt;

&lt;p&gt;我们尝试把它乘上 $100007$。&lt;/p&gt;

&lt;p&gt;得到了 $281474976769243$。&lt;/p&gt;

&lt;p&gt;得到的数化为二进制，有：&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;0b1000000000000000000000000000000001110010011011011&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;它的从右往左第 $49$ 位是一个 $1$，接着是一堆的 $0$，接着是一些杂数。&lt;/p&gt;

&lt;p&gt;也就是说，它等于 $2^{48}+58587$。&lt;/p&gt;

&lt;p&gt;于是我们可以解释原理：&lt;/p&gt;

&lt;p&gt;那么一个数 $x$ 乘上 $m$ 的时候，记 $a=\left\lfloor\frac{x}{100007}\right\rfloor,b=x\ \text{mod}\ 100007$ 我们有&lt;/p&gt;

&lt;p&gt;$xm=(100007a+b)m=100007a\times m+b\times m$&lt;/p&gt;

&lt;p&gt;其中 $b\times m\le 100006\times 2814552749=281472162216494$。&lt;/p&gt;

&lt;p&gt;且 $100007a\times m=a\times (100007\times m)=a\times(2^{48}+58587)=a\times 2^{48}+58587a$。&lt;/p&gt;

&lt;p&gt;并且有 $58587a\le58587\times\left\lfloor\frac{2^{32}}{100007}\right\rfloor=2516077302$&lt;/p&gt;

&lt;p&gt;所以说最后我们有&lt;/p&gt;

&lt;p&gt;$ xm\le2^{48}a+2516077302+281472162216494=2^{48}a+281474678293796&amp;lt;2^{48}a+2^{48} $。&lt;/p&gt;

&lt;p&gt;所以 $\left\lfloor\frac{xm}{2^{48}}\right\rfloor\le \left\lfloor\frac{2^{48}a+281474678293796}{2^{48}}\right\rfloor=a$&lt;/p&gt;

&lt;p&gt;于是我们就用一个乘法和一个位移运算手动规避了除法……&lt;/p&gt;

&lt;p&gt;对于其它的模数，我们也可以做同样的事情。只要构造出一个满足上面的性质的数字就好了。随手敲了几个数字，事实证明编译器都能帮你算出这么个数字。&lt;/p&gt;

&lt;p&gt;也太可怕了吧！&lt;/p&gt;

&lt;p&gt;然后我们就得到了 $\left\lfloor\frac{x}{100007}\right\rfloor$。&lt;/p&gt;

&lt;p&gt;接着把它乘上 $100007$，再拿 $x$ 去减它，就是 $x-100007\left\lfloor\frac{x}{100007}\right\rfloor=x\ \text{mod}\ 100007$。&lt;/p&gt;

&lt;p&gt;于是我们就成功规避了除法操作！&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;那我能不能拿这个出卡常题？&lt;/h3&gt;

&lt;p&gt;醒醒，您要先能在代码里访问得了储存溢出的高位的那个寄存器%edx再说……&lt;/p&gt;

&lt;p&gt;什么你拿unsigned long long来存？&lt;/p&gt;

&lt;p&gt;亲测变慢……六十四位乘法可不是算着玩的。&lt;/p&gt;

&lt;p&gt;也许内嵌汇编可以，但是比赛又不允许，反正现在大部分编译器有-O2，也许我们应该做的，就是尽量关心一些编译器，多配合编译器，能讲清楚的尽量讲清楚，例如把能开成常量的东西开成常量，让编译器充分优化……&lt;/p&gt;
</description>
        <pubDate>Mon, 11 Jun 2018 00:00:00 +0800</pubDate>
        <link>https://alphagem.github.io/2018/06/11/%E7%A5%9E%E5%A5%87%E7%9A%84%E7%BC%96%E8%AF%91%E5%99%A8%E9%99%A4%E6%B3%95%E4%BC%98%E5%8C%96.html</link>
        <guid isPermaLink="true">https://alphagem.github.io/2018/06/11/%E7%A5%9E%E5%A5%87%E7%9A%84%E7%BC%96%E8%AF%91%E5%99%A8%E9%99%A4%E6%B3%95%E4%BC%98%E5%8C%96.html</guid>
        
        <category>信息竞赛</category>
        
        <category>电脑操作</category>
        
        <category>编译原理</category>
        
        
        <category>OI</category>
        
        <category>computer</category>
        
      </item>
    
      <item>
        <title>Educational Codeforces Round44爆炸记</title>
        <description>&lt;p&gt;在rating=2089的接近橙名时候打了一发Edu Round，结果被虐得超惨……好在没有什么FST导致一发回蓝之类的。而且最后开放Hack的时候叉人是真的爽，也算是没有白掉rating？&lt;/p&gt;

&lt;h3 id=&quot;wa-on-pretest&quot;&gt;紧张刺激的WA on pretest&lt;/h3&gt;

&lt;p&gt;以下题目按照AC顺序列出。阅读时建议跳过题面。&lt;/p&gt;

&lt;h4 id=&quot;a---chess-placinghttpcodeforcescomcontest985problema&quot;&gt;&lt;a href=&quot;http://codeforces.com/contest/985/problem/A&quot;&gt;A - Chess Placing&lt;/a&gt;&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Statement&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;You are given a chessboard of size $1\times n$. It is guaranteed that &lt;em&gt;n&lt;/em&gt; is even. The chessboard is painted like this: “BWBW…BW”.&lt;/p&gt;

  &lt;p&gt;Some cells of the board are occupied by the chess pieces. Each cell contains no more than one chess piece. It is known that the total number of pieces equals to $\frac{n}{2}$.&lt;/p&gt;

  &lt;p&gt;In one step you can move one of the pieces one cell to the left or to the right. You cannot move pieces beyond the borders of the board. You also cannot move pieces to the cells that are already occupied.&lt;/p&gt;

  &lt;p&gt;Your task is to place all the pieces in the cells of the same color using the minimum number of moves (all the pieces must occupy only the black cells or only the white cells after all the moves are made).&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;Input&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;The first line of the input contains one integer $n$ ($2\le n\le 100$, $n$ is even) — the size of the chessboard.&lt;/p&gt;

  &lt;p&gt;The second line of the input contains $\frac{n}{2}$ integer numbers $p_1,p_2,\ldots,p_{\frac{n}{2}}$ ($1\le p_i\le n$) — initial positions of the pieces. It is guaranteed that all the positions are distinct.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;Print one integer — the minimum number of moves you have to make to place all the pieces in the cells of the same color.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;一个大水题直接被我想复杂了，用什么贪心模拟……还交了一发FST的假贪心……直接sort以后按顺序把 $a_i$ 与 $2i$(或 $2i-1$)作差的绝对值并求和，然后把与 $2i$ 作的差和与 $2i-1$ 作的差取 $\min$ 就好了。&lt;/p&gt;

&lt;p&gt;罚时++&lt;/p&gt;

&lt;p&gt;接着为了多捞一些分跳过了B题，毕竟后面的题目掉分快。&lt;/p&gt;

&lt;h4 id=&quot;c---liebigs-barrelshttpcodeforcescomcontest985problemc&quot;&gt;&lt;a href=&quot;http://codeforces.com/contest/985/problem/C&quot;&gt;C - Liebig’s Barrels&lt;/a&gt;&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Statement&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;You have $m=n\cdot k$ wooden staves. The &lt;em&gt;i&lt;/em&gt;-th stave has length $a_i$. You have to assemble $n$ barrels consisting of $k$ staves each, you can use any $k$ staves to construct a barrel. Each stave must belong to exactly one barrel.&lt;/p&gt;

  &lt;p&gt;Let volume $v_j$ of barrel $j$ be equal to the length of the minimal stave in it.&lt;/p&gt;

  &lt;p&gt;&lt;img src=&quot;http://codeforces.com/predownloaded/66/8e/668e3bce94c546efd818de5a228c816594b7cc60.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;You want to assemble exactly $n$ barrels with the maximal total sum of volumes. But you have to make them equal enough, so a difference between volumes of any pair of the resulting barrels must not exceed $l$, i.e. $| v_x-v_y|\le l$ for any $1\le x\le n$ and $1\le y\le n$.&lt;/p&gt;

  &lt;p&gt;Print maximal total sum of volumes of equal enough barrels or $0$ if it’s impossible to satisfy the condition above.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;Input&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;The first line contains three space-separated integers $n$, $k$ and $l$ ($1\le n, k\le 10^5$, $1\le n\cdot k\le 10^5$, $0\le l\le 10^9$).&lt;/p&gt;

  &lt;p&gt;The second line contains $m=n\cdot k$ space-separated integers $a_1, a_2, \ldots, a_m$ ($1\le a_i\le 10^9$) — lengths of staves.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;Print single integer — maximal total sum of the volumes of barrels or 0 if it’s impossible to construct exactly &lt;em&gt;n&lt;/em&gt; barrels satisfying the condition $|v_x-v_y| ≤ l$ for any $1\le x\le n$ and $1\le y\le n$.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;一个简单的贪心构造题。&lt;/p&gt;

&lt;p&gt;首先判断以下比最短的板子长不超过 $l$ 的板子有多少块，如果少于 $n$ 块直接输出 $0$，否则开始构造：首先拿最小的板子和比最小的板子长不超过 $l$ 的最长的 $n-1$ 块板子初始造 $n$ 个桶，接着从短往长把板子加到短板尽量短的桶里进去，如果一个桶用满了就只好开一个新桶。&lt;/p&gt;

&lt;p&gt;结果想了一堆无脑假贪心，为了弥补第一题浪费的时间各种交上去无法过pretest。&lt;/p&gt;

&lt;p&gt;罚时+=3&lt;/p&gt;

&lt;h4 id=&quot;d---sand-fortresshttpcodeforcescomcontest985problemd&quot;&gt;&lt;a href=&quot;http://codeforces.com/contest/985/problem/D&quot;&gt;D - Sand Fortress&lt;/a&gt;&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Statement&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;You are going to the beach with the idea to build the greatest sand castle ever in your head! The beach is not as three-dimensional as you could have imagined, it can be decribed as a line of spots to pile up sand pillars. Spots are numbered $1$ through infinity from left to right.&lt;/p&gt;

  &lt;p&gt;Obviously, there is not enough sand on the beach, so you brought $n$ packs of sand with you. Let height $h_i$ of the sand pillar on some spot $i$ be the number of sand packs you spent on it. You can’t split a sand pack to multiple pillars, all the sand from it should go to a single one. There is a fence of height equal to the height of pillar with $H$ sand packs to the left of the first spot and you should prevent sand from going over it.&lt;/p&gt;

  &lt;p&gt;Finally you ended up with the following conditions to building the castle:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;$h_1\le H$: no sand from the leftmost spot should go over the fence;&lt;/li&gt;
    &lt;li&gt;For any $i\in [1,\infty)|h_i-h_i+1| \le 1$: large difference in heights of two neighboring pillars can lead sand to fall down from the higher one to the lower, you really don’t want this to happen;&lt;/li&gt;
    &lt;li&gt;$\sum_{i=1}^{\infty}h_i=n$: you want to spend all the sand you brought with you.&lt;/li&gt;
  &lt;/ul&gt;

  &lt;p&gt;As you have infinite spots to build, it is always possible to come up with some valid castle structure. Though you want the castle to be as compact as possible.&lt;/p&gt;

  &lt;p&gt;Your task is to calculate the minimum number of spots you can occupy so that all the aforementioned conditions hold.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;Input&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;The only line contains two integer numbers $n$ and $H$ ($1\le n, H\le 10^{18}$) — the number of sand packs you have and the height of the fence, respectively.&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;Print the minimum number of spots you can occupy so the all the castle building conditions hold.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;一个简单的二分题。最终的最优解形如左边一个直角梯形，右边一个等边直角三角形的形状去掉最上面的一层的一部分（也可能什么都不去掉）。于是直接二分最高点判断两块面积加起来是否大于或等于 $n$ 。注意分类讨论最高层有一个包和有两个包的情况。&lt;/p&gt;

&lt;p&gt;结果一开始把 $h_1\le H$ 看成 $\forall i\in[1,\infty),h_i\le H$……&lt;/p&gt;

&lt;p&gt;罚时+=3&lt;/p&gt;

&lt;p&gt;然后赶紧急急忙忙交上去，结果最高层有两个包的情况没判……&lt;/p&gt;

&lt;p&gt;罚时++&lt;/p&gt;

&lt;p&gt;剩余时间10min。&lt;/p&gt;

&lt;h4 id=&quot;b---switches-and-lampshttpcodeforcescomcontest985problemb&quot;&gt;&lt;a href=&quot;http://codeforces.com/contest/985/problem/B&quot;&gt;B - Switches and Lamps&lt;/a&gt;&lt;/h4&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Statement&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;You are given $n$ switches and $m$ lamps. The $i$-th switch turns on some subset of the lamps. This information is given as the matrix $a$ consisting of $n$ rows and $m$ columns where $a_{i,j}=1$ if the $i$-th switch turns on the $j$-th lamp and $a_{i,j}=0$ if the $i$-th switch is not connected to the $j$-th lamp.&lt;/p&gt;

  &lt;p&gt;Initially all $m$ lamps are turned off.&lt;/p&gt;

  &lt;p&gt;Switches change state only from “off” to “on”. It means that if you press two or more switches connected to the same lamp then the lamp will be turned on after any of this switches is pressed and will remain its state even if any switch connected to this lamp is pressed afterwards.&lt;/p&gt;

  &lt;p&gt;It is guaranteed that if you push all $n$ switches then all $m$ lamps will be turned on.&lt;/p&gt;

  &lt;p&gt;Your think that you have too many switches and you would like to ignore one of them.&lt;/p&gt;

  &lt;p&gt;Your task is to say if there exists such a switch that if you will ignore (not use) it but press all the other $n-1$ switches then all the $m$ lamps will be turned on.&lt;/p&gt;

  &lt;p&gt;Input&lt;/p&gt;

  &lt;p&gt;The first line of the input contains two integers $n$ and $m$ ($1\le n,m\le2000$) — the number of the switches and the number of the lamps.&lt;/p&gt;

  &lt;p&gt;The following $n$ lines contain $m$ characters each. The character $a_{i,j}$ is equal to ‘1’ if the $i$-th switch turns on the $j$-th lamp and ‘0’ otherwise.&lt;/p&gt;

  &lt;p&gt;It is guaranteed that if you press all $n$ switches all $m$ lamps will be turned on.&lt;/p&gt;

  &lt;p&gt;Output&lt;/p&gt;

  &lt;p&gt;Print “YES” if there is a switch that if you will ignore it and press all the other $n-1$ switches then all $m$ lamps will be turned on. Print “NO” if there is no such switch.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;直接开个 $cnt$ 记每个灯被几个开关开，接着枚举每个开关，如果不存在 $cnt=1$ 的灯由它控制，它就是没有用的。&lt;/p&gt;

&lt;p&gt;于是拿到了本场第一个一发过pretest。&lt;/p&gt;

&lt;p&gt;剩余时间5min。&lt;/p&gt;

&lt;p&gt;交上去以后看了一下榜，发现自己居然是交4个题里面罚时最多的之一，感觉很不对劲。即使是我有8个罚时，但是前面还有很多人比我罚时多啊……&lt;/p&gt;

&lt;p&gt;然后突然意识到这是Edu Round，罚时算的是所有题目的提交时间和，而不是每个题分别掉分，也就是说我如果先开B题在1.5h前直接A掉我可能也不会这么惨……&lt;/p&gt;

&lt;p&gt;然后前面还有一整版的切掉5题的人，两个穿场的，感觉自己凉透了……&lt;/p&gt;

&lt;p&gt;然后又看了看Friends Standings，发现同机房里一堆切掉ABCE然后rank比我高的，问了下听说E是个大水题……&lt;/p&gt;

&lt;p&gt;比赛结束的那一刻，凌晨时分，整个机房，除了我，都像在聚众吸毒一样兴奋呢。&lt;/p&gt;

&lt;h3 id=&quot;opening-hack&quot;&gt;更紧张刺激的深夜Opening Hack&lt;/h3&gt;

&lt;p&gt;本来对Opening Hack不抱什么希望的。结果我们机房里有个人的E被叉掉了——&lt;/p&gt;

&lt;p&gt;整个机房炸锅啦！&lt;/p&gt;

&lt;p&gt;原本比赛结束时机房中声浪已是起伏不定，层起迭出，这下却是一浪高过一浪，大有海涌江横之势，完全不像一个凌晨的校园该有的样子。&lt;/p&gt;

&lt;p&gt;紧接着过不久又一个人的E也被叉掉了，问了下发现三个人的E的做法是一样的……&lt;/p&gt;

&lt;p&gt;于是大家都开始构数据叉最后一个人，要被叉的同学构数据构得最积极。（肥水不流外人田？）&lt;/p&gt;

&lt;p&gt;然后我成功地第一个构出了一组数据，并且把它念给了另一个同学让他帮我check，结果一个口滑数据念错，刚发现自己念错的时候机房中传来了清脆的鼠标声——&lt;/p&gt;

&lt;p&gt;“啪！”&lt;/p&gt;

&lt;p&gt;然后那位要被叉的同学获得了一个Unsuccessful Hack。&lt;/p&gt;

&lt;p&gt;在这里对自己念错数据的行为表示道歉并强烈谴责这种听得风是得雨拿别人想出的数据来叉自己的行为。（？）&lt;/p&gt;

&lt;p&gt;另：亲手叉掉比自己排名高的队友感觉真好。&lt;/p&gt;

&lt;p&gt;于是聚众赌博开始了！&lt;/p&gt;

&lt;p&gt;所有人都抱着同一组数据到处叉人，其中有甚欧者，开出不少假代码而叉之，像我这种非酋……&lt;/p&gt;

&lt;p&gt;综上所述，Codeforces是一种具有与毒品、赌博性质类似的危害巨大的东西。它具有成瘾性（例如一个人打完一把如果涨了rating就会想再打一把，如果掉了rating就会想再打一把）、致幻性（我今天这把稳了！）、心理伤害性（WA on test 97）、生理伤害性（大半夜不睡觉做什么呢）等诸多特点……&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;余波&lt;/h3&gt;

&lt;p&gt;第二天再开榜，发现自己的排名涨了一点。抱着对E题的怨念，我坚持着点开一个又一个人的代码，结果点开一份代码以后，一个函数名称赫然刻在屏幕上……&lt;/p&gt;

&lt;p&gt;DFS！&lt;/p&gt;

&lt;p&gt;什么东西？&lt;/p&gt;

&lt;p&gt;DFS！&lt;/p&gt;

&lt;p&gt;认真看了一下，似乎是记忆化搜索，但是枚举转移的方式似乎很不优秀，大概算是加了剪枝的记忆化搜索……&lt;/p&gt;

&lt;p&gt;于是构了一个极限数据把它卡成平方卡掉了。&lt;/p&gt;

&lt;p&gt;接着开始开别人的代码，这么写的居然还不在少数……&lt;/p&gt;

&lt;p&gt;于是最后成功拿到了+9。其实还可以叉更多的，只不过叉排名在自己后面的人没啥意义，而且我也累了……&lt;/p&gt;

&lt;p&gt;然后看了一下hack记录，居然有一个200+的，几秒能hack一个人，怕不是写了脚本……&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;尾声&lt;/h3&gt;

&lt;p&gt;rating-=42。&lt;/p&gt;

&lt;p&gt;惨。&lt;/p&gt;

&lt;p&gt;要是我B题先写应该还不至于这么惨……&lt;/p&gt;
</description>
        <pubDate>Sun, 27 May 2018 00:00:00 +0800</pubDate>
        <link>https://alphagem.github.io/2018/05/27/Educational_Codeforces_Round44%E7%88%86%E7%82%B8%E8%AE%B0.html</link>
        <guid isPermaLink="true">https://alphagem.github.io/2018/05/27/Educational_Codeforces_Round44%E7%88%86%E7%82%B8%E8%AE%B0.html</guid>
        
        <category>信息竞赛</category>
        
        <category>Codeforces</category>
        
        
        <category>OI</category>
        
      </item>
    
      <item>
        <title>國語羅馬字學習筆記</title>
        <description>&lt;p&gt;成功浪費了大量時間學習這個奇怪的叫做國語羅馬字的東西。&lt;/p&gt;

&lt;p&gt;變調規則真是多得要命，超麻煩。然而這個方案確實有字符全部限定在ASCII字符集的優點，寫起來看着也比較舒服。&lt;/p&gt;

&lt;p&gt;本文大部分內容參照了維基百科“國語羅馬字”條目&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;聲母表&lt;/h3&gt;

&lt;p&gt;其中形如A/B的東西中A是清音，B是濁音，不存在的東西用-表示&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;雙脣&lt;/td&gt;
      &lt;td&gt;脣齒&lt;/td&gt;
      &lt;td&gt;齒齦&lt;/td&gt;
      &lt;td&gt;齦齶&lt;/td&gt;
      &lt;td&gt;捲舌&lt;/td&gt;
      &lt;td&gt;硬齶&lt;/td&gt;
      &lt;td&gt;軟齶&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;鼻音&lt;/td&gt;
      &lt;td&gt;-/m&lt;/td&gt;
      &lt;td&gt;-/-&lt;/td&gt;
      &lt;td&gt;-/n&lt;/td&gt;
      &lt;td&gt;-/-&lt;/td&gt;
      &lt;td&gt;-/-&lt;/td&gt;
      &lt;td&gt;-/gn&lt;/td&gt;
      &lt;td&gt;-/ng&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;不送氣塞音&lt;/td&gt;
      &lt;td&gt;b/-&lt;/td&gt;
      &lt;td&gt;-/-&lt;/td&gt;
      &lt;td&gt;d/-&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;送氣塞音&lt;/td&gt;
      &lt;td&gt;p/-&lt;/td&gt;
      &lt;td&gt;-/-&lt;/td&gt;
      &lt;td&gt;t/-&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;不送氣塞擦音&lt;/td&gt;
      &lt;td&gt;-/-&lt;/td&gt;
      &lt;td&gt;-/-&lt;/td&gt;
      &lt;td&gt;tz/-&lt;/td&gt;
      &lt;td&gt;j/-&lt;/td&gt;
      &lt;td&gt;ji/-&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;g/-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;送氣塞擦音&lt;/td&gt;
      &lt;td&gt;-/-&lt;/td&gt;
      &lt;td&gt;-/-&lt;/td&gt;
      &lt;td&gt;ts/-&lt;/td&gt;
      &lt;td&gt;ch/-&lt;/td&gt;
      &lt;td&gt;chi/-&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;k/-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;擦音&lt;/td&gt;
      &lt;td&gt;-/-&lt;/td&gt;
      &lt;td&gt;f/-&lt;/td&gt;
      &lt;td&gt;s/-&lt;/td&gt;
      &lt;td&gt;sh/r&lt;/td&gt;
      &lt;td&gt;shi/-&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;h/-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;邊音&lt;/td&gt;
      &lt;td&gt;-/-&lt;/td&gt;
      &lt;td&gt;-/-&lt;/td&gt;
      &lt;td&gt;-/l&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;section-1&quot;&gt;韻母表&lt;/h3&gt;

&lt;h4 id=&quot;a&quot;&gt;主元音爲低元音/a/及其變體的&lt;/h4&gt;

&lt;p&gt;其中各行分別爲開合齊撮四個呼，各列是不同韻尾，主元音是/a/及其變體。&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;-∅&lt;/td&gt;
      &lt;td&gt;-/i/&lt;/td&gt;
      &lt;td&gt;-/u/&lt;/td&gt;
      &lt;td&gt;-/n/&lt;/td&gt;
      &lt;td&gt;-/ŋ/&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;∅-&lt;/td&gt;
      &lt;td&gt;a&lt;/td&gt;
      &lt;td&gt;ai&lt;/td&gt;
      &lt;td&gt;au&lt;/td&gt;
      &lt;td&gt;an&lt;/td&gt;
      &lt;td&gt;ang&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/j/-&lt;/td&gt;
      &lt;td&gt;ia&lt;/td&gt;
      &lt;td&gt;iai&lt;/td&gt;
      &lt;td&gt;iau&lt;/td&gt;
      &lt;td&gt;ian&lt;/td&gt;
      &lt;td&gt;iang&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/w/-&lt;/td&gt;
      &lt;td&gt;ua&lt;/td&gt;
      &lt;td&gt;uai&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;uan&lt;/td&gt;
      &lt;td&gt;uang&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/ɥ/-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;iuan&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;section-2&quot;&gt;主元音爲中元音/ə/及其變體的&lt;/h4&gt;

&lt;p&gt;其中各行分別爲開合齊撮四個呼，各列是不同韻尾，主元音是/ə/及其變體。&lt;/p&gt;

&lt;p&gt;兒化音是el。&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;-∅&lt;/td&gt;
      &lt;td&gt;-/i/&lt;/td&gt;
      &lt;td&gt;-/u/&lt;/td&gt;
      &lt;td&gt;-/n/&lt;/td&gt;
      &lt;td&gt;-/ŋ/&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;∅-&lt;/td&gt;
      &lt;td&gt;e/o *&lt;/td&gt;
      &lt;td&gt;ei&lt;/td&gt;
      &lt;td&gt;ou&lt;/td&gt;
      &lt;td&gt;en&lt;/td&gt;
      &lt;td&gt;eng&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/j/-&lt;/td&gt;
      &lt;td&gt;ie&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;iou&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/w/-&lt;/td&gt;
      &lt;td&gt;uo&lt;/td&gt;
      &lt;td&gt;uei&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;uen **&lt;/td&gt;
      &lt;td&gt;ueng&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/ɥ/-&lt;/td&gt;
      &lt;td&gt;iue&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;*: 在b,p,m,f後寫作o，在其它聲母後寫作e&lt;/p&gt;

&lt;p&gt;**: 這是“溫”的韻母，關於它的描述似乎有兩種版本，一種是/uən/，另一種是/un/，也不好說哪個是對的。&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;主元音爲高元音各音的&lt;/h4&gt;

&lt;p&gt;（也有說法認爲這其中一部分是沒有主元音只有介音，另一部分主元音是/ə/，然而總覺得很彆扭……）&lt;/p&gt;

&lt;p&gt;其中各行分別爲介音+主元音，各列分別爲不同韻尾&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;-∅&lt;/td&gt;
      &lt;td&gt;-/n/&lt;/td&gt;
      &lt;td&gt;-/ŋ/&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/i/-&lt;/td&gt;
      &lt;td&gt;i&lt;/td&gt;
      &lt;td&gt;in&lt;/td&gt;
      &lt;td&gt;ing&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/u/-&lt;/td&gt;
      &lt;td&gt;u&lt;/td&gt;
      &lt;td&gt;uen&lt;/td&gt;
      &lt;td&gt;ong&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/y/-&lt;/td&gt;
      &lt;td&gt;iu&lt;/td&gt;
      &lt;td&gt;iun&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/ju/&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;-&lt;/td&gt;
      &lt;td&gt;iong&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;section-4&quot;&gt;聲調規則&lt;/h3&gt;

&lt;p&gt;最麻煩的一部分……&lt;/p&gt;

&lt;p&gt;先貼一個原文。&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;阴平声&lt;/td&gt;
      &lt;td&gt;同无声调之拼法；例如：花 hua、乌 u。但浊音声母（m、n、l、r）则在声母后加 h；例如：猫 mhau、拉 lha、妞 nhiu、扔 rheng。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;阳平声&lt;/td&gt;
      &lt;td&gt;(1) 在韵母（包含ong）的母音后面加 r；例如：茶 char、同 torng、神 shern。(2) 韵母为 i、u 开头者改为 y、w；例如：羊 yang、黄 hwang。(3) 韵母仅有单一母音 i、u 时则改为 yi、wu；例如：宜 yi、胡 hwu。iu 改为 yu；例如：徐 shyu。(4) 浊音声母（m、n、l、r）则同无声调之拼法；例如：民 min、泥 ni、连 lian、人 ren。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;上声&lt;/td&gt;
      &lt;td&gt;(1) 韵母中仅有一个母音，则将其双写；例如：起 chii、古 guu、反 faan。(2) 将复合韵母中之 i、u 改为 e、o；例如：假 jea、管 goan、许 sheu、海 hae、好 hao。(3) 韵头韵尾都有 i、u 者，改韵头不改韵尾；例如：鸟 neau、拐 goai。(4) ei, ie, ou, uo 四韵则不改 i、u而是把 e、o 双写；例如：美 meei、口 koou、解 jiee、果 guoo。(5) 如音节为 i、u 开头时，则变音后在前加 y、w；例如：雅 yea、五 wuu。但 ie、uo两韵则改韵头为 y、w；例如：也 yee、我 woo。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;去声&lt;/td&gt;
      &lt;td&gt;(1) 韵尾为 -i、-u、-n、-ng、-l 者改为 -y、-w、-nn、-nq、-ll；例如：在 tzay、到 daw、半 bann、正 jenq、二 ell。(2) 其他各韵（包含iu）在韵尾之后加 h；例如：世 shyh、地 dih。(3) 如音节为 i、u 开头时，应改为 y、w；例如：要 yaw、遇 yuh。但若 i、u 为唯一母音时则前加 y、w；例如：意 yih、映 yinq。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;轻声&lt;/td&gt;
      &lt;td&gt;同无声调之拼法，在音节前方加上一点；例如：的 .de。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;然後是我閱讀了無數遍之後的仍然很麻煩的理解……&lt;/p&gt;

&lt;p&gt;首先根據聲母韻母湊出一個“無聲調拼法”，接着：&lt;/p&gt;

&lt;p&gt;陰平什麼都不變。否則進行兩步操作：&lt;/p&gt;

&lt;p&gt;作基礎變化：&lt;/p&gt;

&lt;p&gt;陽平改介音或高主元音（ong除外，因爲這裏的u寫作o）。介音中的i, u, iu改成y, w, yu；主元音中的i, u, iu改成yi, wu, yu。如果找不到可以改的介音或高主元音，那麼在主元音後加r。&lt;/p&gt;

&lt;p&gt;上聲改出現的&lt;strong&gt;第一個非主元音&lt;/strong&gt;i或u，改成e或o。但是如果出現ie/ei-&amp;gt;ee或者uo/ou-&amp;gt;oo的情況會混淆，不作任何處理，這時也認爲沒有找到可更改的東西。接着如果找不到可更改的東西就雙寫主元音。&lt;/p&gt;

&lt;p&gt;去聲改韻尾，-i, -u, -n, -ng, -l改爲-y, -w, -nn, -nq, -ll。如果找不到可更改的韻尾就在末尾加h。&lt;/p&gt;

&lt;p&gt;接着進行修正：&lt;/p&gt;

&lt;p&gt;否則，&lt;/p&gt;

&lt;p&gt;如果開頭是寫作i, u的介音/j/, /w/，把它們變成y或w。&lt;/p&gt;

&lt;p&gt;如果開頭是寫作e, o的介音/j/, /w/，在它們前面加上一個y或w。&lt;/p&gt;

&lt;p&gt;如果開頭是主元音的i或u（上聲雙寫也在此例），在它們前面加上一個y或w。&lt;/p&gt;

&lt;p&gt;另外的特殊規則：&lt;/p&gt;

&lt;p&gt;考慮到平聲是根據清濁分陰陽的，濁聲母遇到陽平同無聲調之默認拼法，遇到陰平只需在聲母後加h而不需做任何其它變化。&lt;/p&gt;

&lt;p&gt;輕聲同無聲調之拼法，但在前面加一個點’.’。&lt;/p&gt;
</description>
        <pubDate>Sun, 06 May 2018 00:00:00 +0800</pubDate>
        <link>https://alphagem.github.io/2018/05/06/%E5%9C%8B%E8%AA%9E%E7%BE%85%E9%A6%AC%E5%AD%97%E7%AD%86%E8%A8%98.html</link>
        <guid isPermaLink="true">https://alphagem.github.io/2018/05/06/%E5%9C%8B%E8%AA%9E%E7%BE%85%E9%A6%AC%E5%AD%97%E7%AD%86%E8%A8%98.html</guid>
        
        <category>語言音韻</category>
        
        <category>國語羅馬字</category>
        
        
        <category>linguistics</category>
        
      </item>
    
      <item>
        <title>输出语句调试科技系列</title>
        <description>&lt;p&gt;GDB都是邪教，printf系列调试大法好。（其实是我不会用GDB……）于是这里就是一些printf调试科技的总结。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;基础操作&lt;/h3&gt;

&lt;p&gt;如&lt;a href=&quot;/2018/03/11/Linux中Gedit的脚本设置&quot;&gt;Linux中Gedit的脚本设置&lt;/a&gt;一文所述，我们有如下的基础操作方法：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;	&lt;span class=&quot;cp&quot;&gt;#ifdef DEBUG
&lt;/span&gt;	&lt;span class=&quot;cp&quot;&gt;#define debug(a...) fprintf(stderr,a),fflush(stderr)
&lt;/span&gt;	&lt;span class=&quot;cp&quot;&gt;#else
&lt;/span&gt;	&lt;span class=&quot;cp&quot;&gt;#define debug(a...) 1
&lt;/span&gt;	&lt;span class=&quot;cp&quot;&gt;#endif&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;接着我们就只需要像调用printf函数一样地调用debug就可以实现当且仅当预定义了宏“DEBUG”才把错误信息输出到stderr。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;进阶操作&lt;/h3&gt;

&lt;p&gt;最近淆了个变长参数函数的用法，所以……&lt;/p&gt;

&lt;p&gt;首先引用头文件cstdarg，然后打出如下代码：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;	&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,...)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;cp&quot;&gt;#ifdef DEBUG
&lt;/span&gt;		&lt;span class=&quot;n&quot;&gt;fprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;kt&quot;&gt;va_list&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;va_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;va_arg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fprintf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%d &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;puts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;fflush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;va_end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;cp&quot;&gt;#endif
&lt;/span&gt;	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;接着就可以以如下方式进行调试：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;	&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;i,f[i]: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;变长参数这里以-1结尾，实际运用的时候可以以你需要的数字结尾，只要把db函数里面的循环终止条件改成等于你所设定的数字就好了。然后当且仅当预定义了宏DEBUG，程序会输出一行形如”i,f[i]: 2 10”这样的信息，就省去了每次调试打%d并且还要算好有几个%d之类的麻烦。比较适合那种要输出几百次调试的题目。&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Apr 2018 00:00:00 +0800</pubDate>
        <link>https://alphagem.github.io/2018/04/18/%E8%BE%93%E5%87%BA%E8%AF%AD%E5%8F%A5%E8%B0%83%E8%AF%95%E7%A7%91%E6%8A%80%E7%B3%BB%E5%88%97.html</link>
        <guid isPermaLink="true">https://alphagem.github.io/2018/04/18/%E8%BE%93%E5%87%BA%E8%AF%AD%E5%8F%A5%E8%B0%83%E8%AF%95%E7%A7%91%E6%8A%80%E7%B3%BB%E5%88%97.html</guid>
        
        <category>信息竞赛</category>
        
        <category>调试</category>
        
        
        <category>信息竞赛</category>
        
      </item>
    
      <item>
        <title>現學現賣音韻學隨記一・從普通話福州話進行簡單中古漢語聲調推導</title>
        <description>&lt;p&gt;這裏主要介紹一些簡單的從普通話與福州話的發音推導出中古漢語聲調的方法。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;一些廢話&lt;/h3&gt;

&lt;p&gt;中古漢語的聲調分平上去入四聲，而根據聲母的清濁又分成陰陽，所以總共就是四聲八調。然而在語言的流變中有些聲調就被吃掉了。之前學習了一些從普通話上推中古漢語聲調的基本操作，然後突然意識到也可以用福州話上推，甚至兩者結合起來上推……&lt;/p&gt;

&lt;p&gt;這裏討論的都是比較一般的情況（因爲特殊字實在好多啊，有的還不好解釋）。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;從普通話上推&lt;/h3&gt;

&lt;p&gt;首先不考慮麻煩的要死的入聲字。&lt;/p&gt;

&lt;p&gt;普通話有陰平、陽平、上聲、去聲四個聲調，對應到中古漢語的平上去大概是這樣的&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;中古漢語&lt;/td&gt;
      &lt;td&gt;清平&lt;/td&gt;
      &lt;td&gt;濁平&lt;/td&gt;
      &lt;td&gt;清上&lt;/td&gt;
      &lt;td&gt;次濁上&lt;/td&gt;
      &lt;td&gt;全濁上&lt;/td&gt;
      &lt;td&gt;清去&lt;/td&gt;
      &lt;td&gt;濁去&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;普通話&lt;/td&gt;
      &lt;td&gt;陰平&lt;/td&gt;
      &lt;td&gt;陽平&lt;/td&gt;
      &lt;td&gt;上聲&lt;/td&gt;
      &lt;td&gt;上聲&lt;/td&gt;
      &lt;td&gt;去聲&lt;/td&gt;
      &lt;td&gt;去聲&lt;/td&gt;
      &lt;td&gt;去聲&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;平聲方面是比較清楚的，按清濁分陰陽。&lt;/p&gt;

&lt;p&gt;上聲中聲母是全清次清次濁的對應到普通話的上聲，聲母是全濁的對應到普通話的去聲。&lt;/p&gt;

&lt;p&gt;去聲字就對應到普通話的去聲。&lt;/p&gt;

&lt;p&gt;也就是說，對於一個陰平字，它上推到中古漢語會是清平字；&lt;/p&gt;

&lt;p&gt;對於一個陽平字，它上推到中古漢語會是濁平字；&lt;/p&gt;

&lt;p&gt;對於一個上聲字，它上推到中古漢語會是清上或者次濁上聲字，而清與次濁是很好分辨的，於是就可以判定一個上聲字聲母的清濁；&lt;/p&gt;

&lt;p&gt;對於一個去聲字，它可能是全濁來源或者去聲來源，但是注意到濁母清化“平送仄不送”的規則，如果普通話裏這個字的聲母是送氣的，那麼就說明這個字是清去（因爲全濁上聲字和濁去字不送氣），否則就是全濁上聲字或者濁去字。全濁上聲字和濁去字混得厲害，所以難以區分。&lt;/p&gt;

&lt;p&gt;接下來我們開始考慮入聲字。&lt;/p&gt;

&lt;p&gt;普通話裏，入聲字混到了平上去三聲裏面，而對應關係大概是這樣的&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;中古漢語&lt;/td&gt;
      &lt;td&gt;全清入聲字&lt;/td&gt;
      &lt;td&gt;次清入聲字&lt;/td&gt;
      &lt;td&gt;全濁入聲字&lt;/td&gt;
      &lt;td&gt;次濁入聲字&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;普通話&lt;/td&gt;
      &lt;td&gt;四聲&lt;/td&gt;
      &lt;td&gt;四聲&lt;/td&gt;
      &lt;td&gt;陽平&lt;/td&gt;
      &lt;td&gt;去聲&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;但這種混亂中還是有一些規律的：對於一個陽平字，如果它是次清的，那麼它只能是平聲字，對於一個去聲字，如果它不是次濁的，那麼就不會是入聲字。&lt;/p&gt;

&lt;p&gt;所以入聲好混亂啊……怎麼辦呢？&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;從福州話上推&lt;/h3&gt;

&lt;p&gt;喜聞樂見的事情發生了。保留入聲字的福州話就不存在入派三聲的混亂狀況。&lt;/p&gt;

&lt;p&gt;所以我們就可以先列個表：&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;中古漢語&lt;/td&gt;
      &lt;td&gt;清平&lt;/td&gt;
      &lt;td&gt;濁平&lt;/td&gt;
      &lt;td&gt;清上與次濁上&lt;/td&gt;
      &lt;td&gt;清去&lt;/td&gt;
      &lt;td&gt;全濁上與濁去&lt;/td&gt;
      &lt;td&gt;清入&lt;/td&gt;
      &lt;td&gt;濁入&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;福州話&lt;/td&gt;
      &lt;td&gt;陰平&lt;/td&gt;
      &lt;td&gt;陽平&lt;/td&gt;
      &lt;td&gt;上聲&lt;/td&gt;
      &lt;td&gt;陰去&lt;/td&gt;
      &lt;td&gt;陽去&lt;/td&gt;
      &lt;td&gt;陰入&lt;/td&gt;
      &lt;td&gt;陽入&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;看起來就比較規整了。全濁上這個……這就實在是沒救了啦……&lt;/p&gt;

&lt;p&gt;於是如果會講福州話的話就可以比較方便地判定聲調了。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;什麼……你福州話和我一樣講得很差，然後很多單字不會念只有組詞了纔會？&lt;/h3&gt;

&lt;p&gt;那就組詞啊。&lt;/p&gt;

&lt;p&gt;但是問題又來了：對於一個雙音節詞語，前面的字會發生變調的情況，例如「食飯」，食的聲調是陽入，五度標音記作4或5，但是放在飯前面就要變成21了。&lt;/p&gt;

&lt;p&gt;所以我們就上一張變調表吧……(來源：&lt;a href=&quot;https://en.wikipedia.org/wiki/Fuzhou_dialect#Tonal_sandhi&quot;&gt;https://en.wikipedia.org/wiki/Fuzhou_dialect#Tonal_sandhi&lt;/a&gt;)&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;下字$\rightarrow$&lt;br /&gt;上字$\downarrow$&lt;/td&gt;
      &lt;td&gt;陰平˥&lt;/td&gt;
      &lt;td&gt;陽平˥˧&lt;br /&gt;陽入˥&lt;/td&gt;
      &lt;td&gt;上聲˧&lt;/td&gt;
      &lt;td&gt;陰去˨˩˧&lt;br /&gt;陽去˨˦˨&lt;br /&gt;陰入˨˦&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;陰平˥&lt;br /&gt;陰去˨˩˧&lt;br /&gt;陽去˨˦˨&lt;br /&gt;陰入乙˨˦&lt;/td&gt;
      &lt;td&gt;˥&lt;/td&gt;
      &lt;td&gt;˥&lt;/td&gt;
      &lt;td&gt;˥˧&lt;/td&gt;
      &lt;td&gt;˥˧&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;陽平˥˧&lt;br /&gt; 陽入˥&lt;/td&gt;
      &lt;td&gt;˥&lt;/td&gt;
      &lt;td&gt;˧&lt;/td&gt;
      &lt;td&gt;˧&lt;/td&gt;
      &lt;td&gt;˨˩&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;上聲˧&lt;br /&gt; 陰入甲˨˦&lt;/td&gt;
      &lt;td&gt;˨˩&lt;/td&gt;
      &lt;td&gt;˨˩&lt;/td&gt;
      &lt;td&gt;˧˥&lt;/td&gt;
      &lt;td&gt;˥&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;其中，陰入甲是舊時以-k收尾的字而陰入乙是以喉塞收尾的字。現在都以喉塞收尾了。&lt;/p&gt;

&lt;p&gt;其中入聲字有些的韻尾在連讀的時候被吃掉了，這部分字主要是陽入和陰入乙。&lt;/p&gt;

&lt;p&gt;那麼也就是說：&lt;/p&gt;

&lt;p&gt;對於下字是陰平的詞：&lt;/p&gt;

&lt;p&gt;若上字讀若陰平，則只能排除上聲和陰入甲。需要結合普通話判定平聲還是去聲，入聲就也不能分離出了。&lt;/p&gt;

&lt;p&gt;若上字讀若變降，則可以知道會是上聲或者陰入甲。陰入甲較多的有保留喉塞，例如「國家」，可以區分清楚。&lt;/p&gt;

&lt;p&gt;對於下字是陽平或者陽入的詞：&lt;/p&gt;

&lt;p&gt;若上字讀若陰平，則可以知道是陰平，陰去，陽去或者陰入乙。其中若有保留喉塞音或者普通話是上聲字則這個字會是陰入乙，否則也比較難區分開。&lt;/p&gt;

&lt;p&gt;若上字讀若上聲，則可以知道會是陽平或者陽入，而如果這個字是次濁字則可以確定這是陽平字，否則就混起來了……&lt;/p&gt;

&lt;p&gt;若上字讀若變降，則知道是上聲或者陰入甲，同理。&lt;/p&gt;

&lt;p&gt;下字聲調的其餘情況也與上面一類同理可以推得到。&lt;/p&gt;

&lt;p&gt;所以基本上除了陰入甲也都還不是很容易解決。（因爲上字的混同與普通話有些類似。）&lt;/p&gt;

&lt;p&gt;所以區分入聲字還有一個方法……&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;郭沫若沒出息！[滑稽]&lt;/h3&gt;

&lt;p&gt;然而郭沫若能寫出這種東西還真的是很強啊……&lt;/p&gt;

&lt;p&gt;要是能有人把全濁上聲字也寫成一篇東西就好啦……&lt;/p&gt;
</description>
        <pubDate>Tue, 27 Mar 2018 00:00:00 +0800</pubDate>
        <link>https://alphagem.github.io/2018/03/27/%E7%8F%BE%E5%AD%B8%E7%8F%BE%E8%B3%A3%E9%9F%B3%E9%9F%BB%E5%AD%B8%E9%9A%A8%E8%A8%98%E4%B8%80-%E5%BE%9E%E6%99%AE%E9%80%9A%E8%A9%B1%E7%A6%8F%E5%B7%9E%E8%A9%B1%E9%80%B2%E8%A1%8C%E7%B0%A1%E5%96%AE%E4%B8%AD%E5%8F%A4%E6%BC%A2%E8%AA%9E%E8%81%B2%E8%AA%BF%E6%8E%A8%E5%B0%8E.html</link>
        <guid isPermaLink="true">https://alphagem.github.io/2018/03/27/%E7%8F%BE%E5%AD%B8%E7%8F%BE%E8%B3%A3%E9%9F%B3%E9%9F%BB%E5%AD%B8%E9%9A%A8%E8%A8%98%E4%B8%80-%E5%BE%9E%E6%99%AE%E9%80%9A%E8%A9%B1%E7%A6%8F%E5%B7%9E%E8%A9%B1%E9%80%B2%E8%A1%8C%E7%B0%A1%E5%96%AE%E4%B8%AD%E5%8F%A4%E6%BC%A2%E8%AA%9E%E8%81%B2%E8%AA%BF%E6%8E%A8%E5%B0%8E.html</guid>
        
        <category>語言音韻</category>
        
        <category>中古漢語</category>
        
        <category>福州話</category>
        
        
        <category>linguistics</category>
        
      </item>
    
      <item>
        <title>分治最小割与其证明</title>
        <description>&lt;p&gt;校内互测的时候搬了个分治最小割板子题(CQOI2016)，然后结果讲题的时候被要求证明分治最小割的结论，结果就尬住了……&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;什么是分治最小割？&lt;/h3&gt;

&lt;p&gt;看一个例题，这个题就是上面提到的CQOI2016的分治最小割板子题“不同的最小割”。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;学过图论的同学都知道最小割的概念：对于一个图，某个对图中结点的划分将图中所有结点分成两个部分，如果结点 $s,t$ 不在同一个部分中，则称这个划分是关于 $s,t$ 的割。对于带权图来说，将所有顶点处在不同部分的边的权值相加所得到的值定义为这个割的容量，而 $s,t$ 的最小割指的是在关于 $s,t$ 的割中容量最小的割。&lt;/p&gt;

  &lt;p&gt;对冲刺 NOI 竞赛的选手而言，求带权图中两点的最小割已经不是什么难事了。我们可以把视野放宽，考虑有 $N$ 个点的无向连通图中所有点对的最小割的容量，共能得到 $\frac{N(N−1)}{2}$ 个数值。这些数值中互不相同的有多少个呢？这似乎是个有趣的问题。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;于是我们就强行套用结论解决了这个问题：&lt;/p&gt;

&lt;p&gt;首先，一个图中不同的最小割最多有 $n-1$ 个，并且采用分治最小割模板我们可以求出这 $n-1$ 个不同的最小割。对于这道题，我们把这些最小割sort一下unique一下就完事了。&lt;/p&gt;

&lt;p&gt;而分治最小割的模板是这样的：&lt;/p&gt;

&lt;p&gt;对于一个图 $G=(V,E)$，假设我们现在当前工作中的点的集合是 $S$，其中 $S\subseteq V$ ；&lt;/p&gt;

&lt;p&gt;我们就从 $S$ 中选出一个点 $s$ 和一个点 $t$，在原图 $G$ 上以 $s$ 为源，$t$ 为汇跑一遍最小割；&lt;/p&gt;

&lt;p&gt;假设割出来两个集合分别叫做 $A$ 和 $B$，则最小割的代价为 $w$，且 $s$ 在集合 $A$ 中，$t$ 在集合 $B$ 中，那么我们就知道 $A$ 到 $B$ 的任意点对最小割都会是 $w$。我们就可以暴力更新 $A,B$ 间的点对的最小割。&lt;/p&gt;

&lt;p&gt;然后递归处理 $S=A\cap S$ 和 $S=B\cap S$ 的情况。&lt;/p&gt;

&lt;p&gt;最后我们就求出了任意点对的最小割。&lt;/p&gt;

&lt;p&gt;为什么这是对的？&lt;/p&gt;

&lt;p&gt;于是开始搜索相关的证明/说明，结果要么是“我不会”，要么是随便口糊了一下，要么是机翻风格……反正看着不是很舒服。&lt;/p&gt;

&lt;p&gt;所以就记个板子到此结束了？&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;你改悔罢！&lt;/h3&gt;

&lt;p&gt;接下来开始一段乱七八糟的说明。这段说明的目标是在大致保证严谨性的前提下尽可能让人读懂，但是由于语文和OI水平均有限，所以……&lt;/p&gt;

&lt;p&gt;对于图 $G=(V,E)$，考虑其中不同的两个点 $A_0,D_0$，假设在图上对于 $A_0,D_0$ 跑了一遍最小割以后把图分成了 $S,T$ 两个集合，然后再取不同的两个点 $B_0,C_0$，假设 $B_0,C_0$ 在图 $G$ 上跑一遍最小割以后图被分成了 $X,Y$ 两个集合。&lt;/p&gt;

&lt;p&gt;同时我们不妨设 $A_0\in S,D_0\in T;C_0\in X, B_0\in Y$。&lt;/p&gt;

&lt;p&gt;我们首先需要说明对于一对 $S,T$ &lt;strong&gt;存在&lt;/strong&gt;一对 $X$ 与 $Y$ 使得 $S\subseteq X$ 或 $X\subseteq S$，即 $S\cap X,T\cap X,S\cap Y,T\cap Y$ 这四个把图恰好分成了四份的集合中有一份为空，通俗地来讲就是“最小割不跨立”。如果这个结论是对的，我们就可以从这个结论推出上面的递归处理部分是正确的。&lt;/p&gt;

&lt;p&gt;直接做不好下手，于是考虑使用反证法。&lt;/p&gt;

&lt;p&gt;不妨设 $S\cap X,S\cap Y,T\cap X,T\cap Y$ 分别为 $A,B,C,D$，且这四个集合都不为空。&lt;/p&gt;

&lt;p&gt;那么实际上就是 $A\cup B=S,C\cup D=T,A\cup C=X,B\cup D=Y$。&lt;/p&gt;

&lt;p&gt;各个集合缩点以后连边情况如图所示。图中 $S,T,X,Y$ 分别是上二个、下二个、左二个、右二个。&lt;/p&gt;

&lt;p&gt;也就是说 $A_0$ 在上半边，$B_0$ 在右半边，$C_0$ 在左半边，$D_0$ 在下半边。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/2018-03-21-s1.png&quot; alt=&quot;[pic1]&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其中，$A_0$ 与 $D_0$ 不会在一个缩完的点中，$B_0$ 与 $C_0$ 不会在一个缩完的点中，否则就没有割开。&lt;/p&gt;

&lt;p&gt;分几种情况讨论：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;$A_0,B_0,C_0,D_0$ 中有某两个点在 $A,B,C,D$ 中的同一个集合内（可能重合）。&lt;/p&gt;

    &lt;p&gt;此时如果另外两个点在同一个集合内，那么显然我们只要令 $X=S,Y=T$ 就完事了。&lt;/p&gt;

    &lt;p&gt;于是这里不妨假设是 $A_0$ 与 $C_0$ 都在集合 $A$ 中，而 $B_0$ 在 $B$ 中，$D_0$ 在 $D$ 中。&lt;/p&gt;

    &lt;p&gt;首先考虑 $C_0$ 与 $B_0$ 的所有可能成为最小割的割。它们分别是&lt;/p&gt;

    &lt;p&gt;$a+b+e,a+c+e+f,a+f+d$&lt;/p&gt;

    &lt;p&gt;由于 $C_0$ 与 $B_0$ 的实际上的最小割是分隔了 $S,T$ 的 $a+c+e+f$，那么我们有&lt;/p&gt;

    &lt;p&gt;$a+c+e+f\le a+b+e$ 即 $c+f\le b$&lt;/p&gt;

    &lt;p&gt;$a+c+e+f\le a+f+d$ 即 $c+e\le d$&lt;/p&gt;

    &lt;p&gt;同样地，考虑 $A_0$ 与 $D_0$ 的最小割，我们可以得到&lt;/p&gt;

    &lt;p&gt;$f+d\le a$&lt;/p&gt;

    &lt;p&gt;$b+e\le c$&lt;/p&gt;

    &lt;p&gt;$b+d\le a+c$&lt;/p&gt;

    &lt;p&gt;解不等式可以得到 $e=0,f=0,b=c$。于是实际上 $X-Y$ 的割可以被从 $a+c$（这里 $e,f$ 已经是 $0$ 了所以舍去）被等效为 $a+b$ ，也就是相当于我们把 $C$ 集合从 $X$ 集合里面挖了出来丢到了 $Y$ 里面。这个时候 $T\cap X’=T\cap A$ 就为空集啦！&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;$A_0,B_0,C_0,D_0$ 在四个不同的集合内。&lt;/p&gt;

    &lt;p&gt;则不妨设 $A_0\in A,B_0\in B,C_0\in C,D_0\in D$。&lt;/p&gt;

    &lt;p&gt;这时候令 $X=S,Y=T$ 也是可以的。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;于是我们就证明完了上面的这个结论：&lt;strong&gt;存在&lt;/strong&gt;一种方案使得四个集合有一个为空。也就是只会分出三个非空集合。&lt;/p&gt;

&lt;p&gt;好的。考虑递归处理部分。现在还是设当前在处理 $S$ ，它被割成了 $A,B$ 两个子集。对于一个集合 $A$ 中取出的两个点，它们的最小割一定会把这个集合 $A$ 分成两个非空集合。根据上面的结论，存在一种方案只分出三个非空集合，所以说存在方案 $A$ 中的点不会把 $B$ 集合割开，就影响不到 $B$ 集合内部某两个点的割，分治是对的。&lt;/p&gt;

&lt;p&gt;做完啦！&lt;/p&gt;
</description>
        <pubDate>Wed, 21 Mar 2018 00:00:00 +0800</pubDate>
        <link>https://alphagem.github.io/2018/03/21/%E5%88%86%E6%B2%BB%E6%9C%80%E5%B0%8F%E5%89%B2%E4%B8%8E%E5%85%B6%E8%AF%81%E6%98%8E.html</link>
        <guid isPermaLink="true">https://alphagem.github.io/2018/03/21/%E5%88%86%E6%B2%BB%E6%9C%80%E5%B0%8F%E5%89%B2%E4%B8%8E%E5%85%B6%E8%AF%81%E6%98%8E.html</guid>
        
        <category>信息竞赛</category>
        
        <category>网络流</category>
        
        
        <category>OI</category>
        
      </item>
    
      <item>
        <title>Linux中Gedit的脚本设置</title>
        <description>&lt;p&gt;因为后面可能非常非常经常要用Gedit写题了，所以来总结一下如何用Gedit的脚本功能来搭建一个舒服的调题环境为妙。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;基础配置&lt;/h3&gt;

&lt;p&gt;首先找到Gedit的偏好设定并且将运行外部脚本的功能开起来，然后打开工具找到“管理外部插件”并且新建一个内容如下的脚本：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;    &lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$GEDIT_CURRENT_DOCUMENT_DIR&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$GEDIT_CURRENT_DOCUMENT_NAME&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$s&lt;/span&gt;|cut -d. -f1&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
    g++ &lt;span class=&quot;nv&quot;&gt;$s&lt;/span&gt; -o &lt;span class=&quot;nv&quot;&gt;$c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Success!&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Now let&#39;s go...&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    gnome-terminal --working-directory&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$d&lt;/span&gt; -x bash -c &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;time &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$d&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$c&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;; echo; echo &#39;Press ENTER to continue...&#39;;read&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;（这里末尾有\的是指接下一行，至于最后一段的用&amp;amp;&amp;amp;连接是为了编译失败就不运行。在实际使用的时候可以不换行并且删掉\字符，这里使用是为了能够保证代码长度不超过框框的宽度）&lt;/p&gt;

&lt;p&gt;那这里面的句子是什么意思呢？&lt;/p&gt;

&lt;p&gt;其中第一行代表这是一个脚本。&lt;/p&gt;

&lt;p&gt;第二行定义了一个值为当前目录的变量。&lt;/p&gt;

&lt;p&gt;第三行定义了一个值为当前的cpp文件名的变量。&lt;/p&gt;

&lt;p&gt;第四行是把当前的文件名以点分割并且取前半段。注意这里使用的是重音符 ‘`‘，不要打成单引号啦~&lt;/p&gt;

&lt;p&gt;第五行是先编译运行当前的cpp文件（g++ \$s -o \$c）；&lt;/p&gt;

&lt;p&gt;然后在下方的提示框里面输出成功的消息（两个echo）；&lt;/p&gt;

&lt;p&gt;接着打开一个新终端（gnome-terminal）：&lt;/p&gt;

&lt;p&gt;先把这个终端的运行目录设定成当前的目录（–working-directory=\$d），然后是调用bash的-x bash，然后是在这个bash里面执行一些命令（-c），命令的内容用双引号包起来。命令的内容首先是计时地运行你的程序（time \$d/\$c），注意这里是绝对路径，接着输出一个换行（echo），然后输出一行提示信息（echo ‘Press ENTER to continue’，注意是单引号），最后一个read实现输入等到回车后再关闭窗口。&lt;/p&gt;

&lt;p&gt;接着把它保存为快捷键Ctrl+F11，并保存当前文件即可。&lt;/p&gt;

&lt;p&gt;接下来按下Ctrl+F11，如果编译失败就会在下方显示错误信息，成功就会新弹出一个超级良心der终端，是给这个程序专用的，再也不用担心做题的时候程序提前退出然后因为是用粘贴的结果就在终端里面打了一堆乱七八糟的命令x&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;调试模式&lt;/h3&gt;

&lt;p&gt;新开一个脚本，把刚刚那一段东西里面的g++后面的编译命令里增加一个-DDEBUG，这个脚本快捷键保存为Ctrl+F8，然后在自己的代码开头加入如下一段内容：&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;    &lt;span class=&quot;cp&quot;&gt;#ifdef DEBUG
&lt;/span&gt;    &lt;span class=&quot;cp&quot;&gt;#define debug(a...) fprintf(stderr,a),fflush(stderr)
&lt;/span&gt;    &lt;span class=&quot;cp&quot;&gt;#else
&lt;/span&gt;    &lt;span class=&quot;cp&quot;&gt;#define debug(a...) 1
&lt;/span&gt;    &lt;span class=&quot;cp&quot;&gt;#endif&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;然后接下来在代码里面要调试的地方直接调用debug函数，例如&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;    &lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;x=%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;于是调用这个函数就可以往stderr里面输出debug语句，并&lt;strong&gt;利用fflush让它立即显示在屏幕上&lt;/strong&gt;了。（这很重要，我被坑过，就是因为东西还堆在IO缓冲区内导致输出语句很诡异而调不出题）&lt;/p&gt;

&lt;p&gt;接下来就可以实现如果是Ctrl+F8就可以输出调试语句，按Ctrl+F11不会输出，评测的时候也不会输出的功能惹。&lt;/p&gt;

&lt;p&gt;注意：在第二个define里面要把debug(a…)替换成1而不是空，防止自己一不小心就打出&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;x=%d&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;werken&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;这样的代码，然后就成功在正式测试的时候CE啦！&lt;/p&gt;

&lt;p&gt;当然，自己定义一个新的空函数也是可以的。&lt;/p&gt;

&lt;p&gt;但是还是要注意的是如果你为了调试在 $O(n)$ 的算法里面调用了 $O(n^2)$ 次的啥都不会干的debug函数不删仍然是会T得很惨的吧……&lt;/p&gt;

&lt;p&gt;所以也不是万能的。（这句话的深层含义：出锅了不要打我啊喂！）&lt;/p&gt;

&lt;p&gt;于是就可以成功地在debug和release模式之间自由切换了x&lt;/p&gt;

&lt;p&gt;关于进一步的科技，可以参照&lt;a href=&quot;/2018/04/18/输出语句调试科技系列.html&quot;&gt;输出语句调试科技系列&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;python&quot;&gt;适用于python的版本&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;    &lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$GEDIT_CURRENT_DOCUMENT_DIR&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$GEDIT_CURRENT_DOCUMENT_NAME&lt;/span&gt;
    gnome-terminal --working-directory&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$d&lt;/span&gt; -x bash -c &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;python &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$d&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;; echo; echo &#39;Press ENTER to continue...&#39;;read&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;于是就可以喜闻乐见地直接快捷键运行python了。&lt;/p&gt;

&lt;p&gt;所以大概就长成这样子了如果读不懂可能就是我的语文能力问题了这我也救不了自己了。&lt;/p&gt;
</description>
        <pubDate>Sun, 11 Mar 2018 00:00:00 +0800</pubDate>
        <link>https://alphagem.github.io/2018/03/11/Linux%E4%B8%ADGedit%E7%9A%84%E8%84%9A%E6%9C%AC%E8%AE%BE%E7%BD%AE.html</link>
        <guid isPermaLink="true">https://alphagem.github.io/2018/03/11/Linux%E4%B8%ADGedit%E7%9A%84%E8%84%9A%E6%9C%AC%E8%AE%BE%E7%BD%AE.html</guid>
        
        <category>信息竞赛</category>
        
        <category>电脑操作</category>
        
        <category>Linux</category>
        
        <category>Gedit</category>
        
        <category>脚本</category>
        
        <category>调试</category>
        
        
        <category>OI</category>
        
        <category>computer</category>
        
      </item>
    
      <item>
        <title>NOIWC2018游记</title>
        <description>&lt;p&gt;到长沙&lt;del&gt;玩了一发&lt;/del&gt;参加了NOI2018冬眠营，然后因为太弱正解基本都没听懂，但是学了一堆的奇奇怪怪的东西，像什么分析方法乱搞骗分之类的，这里把个人认为比较好的idea不完全列举如下。&lt;del&gt;不过感觉拿出去应该都是烂大街的东西。&lt;/del&gt;&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;势能函数分析&lt;/h3&gt;

&lt;p&gt;为了分析算法的时间复杂度/正确性等，我们引入当前状态的势能函数，然后证明每次操作势能函数的变化量一定满足一些条件，来推出算法的时间复杂度/正确性是对的。&lt;/p&gt;

&lt;p&gt;比如说我们现在要证明一个算法跑出的解不会超过最优解的 $k$ 倍，那么我们就引入势能函数 $\phi$ 代表当前我们的状态下我们离最优解差多少（这里 $\phi$ 的设计需要比较合理），然后假设最优解和我们分别操作一轮，最优解使 $\phi$ 增大了 $kd$，而我们的操作使 $\phi$ 减少了 $d$，那么我们就证明出了我们的算法跑出的解确实不会超过最优解的 $k$ 倍。&lt;/p&gt;

&lt;p&gt;这样做便于数学表述。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;判断点在多边形内&lt;/h3&gt;

&lt;p&gt;你不一定要作射线去跟多边形交，可以作折线，这样就可以支持特定情况下点的移动了（比如网格图里面）。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;遗传算法的全过程&lt;/h3&gt;

&lt;p&gt;//预计开一个新坑，然后配一道题来说，后面可能会把链接挂过来。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;蚁群算法的全过程&lt;/h3&gt;

&lt;p&gt;//同上。&lt;/p&gt;

&lt;h3 id=&quot;fft&quot;&gt;FFT的物理意义&lt;/h3&gt;

&lt;p&gt;其实我最早学FFT的时候是这样的：&lt;/p&gt;

&lt;p&gt;-要学FFT肯定要先学FT呀！&lt;/p&gt;

&lt;p&gt;（学了好久好久的FT，爆肝物理）&lt;/p&gt;

&lt;p&gt;-我大概了解FT在干什么了。那么FFT呢？&lt;/p&gt;

&lt;p&gt;（开始看FFT）&lt;/p&gt;

&lt;p&gt;-FFT和FT有什么关系么！你说时域转成频域就可以做乘积，然后就贴了一个板子，这个板子是在做什么呀！&lt;/p&gt;

&lt;p&gt;（滚回去继续理解FT）&lt;/p&gt;

&lt;p&gt;-完全无法理解[托腮]&lt;/p&gt;

&lt;p&gt;（最后还是选择了背板）&lt;/p&gt;

&lt;p&gt;然后大概这次才是基本弄清楚了FT到底是怎么到FFT的。实际上大概就是物理是玩这个世界，然后玩着玩着开始推数学，但是数学是造一个世界自己玩，然后就越玩越远了x&lt;/p&gt;

&lt;p&gt;不过FT还是确实挺有用的（看起来Praat这个软件就是跑了个FT来分析共振峰，共振峰分析在语音学上也还是蛮有用的吧。所以说各个学科还是相互服务的。）&lt;/p&gt;

&lt;p&gt;具体大约要看松松松的课件我在这里可能讲不清楚x&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;从现有的算法来看待问题，尤其是交互式题目&lt;/h3&gt;

&lt;p&gt;比如说像营里面课上有一个交互题，题意是这样的：有一张&lt;strong&gt;有向图&lt;/strong&gt;，$n$ 个点，每个点是一个房间，度数为 $m$ ，即从房间有 $m$ 条长得一模一样的通道连出去，房间的正中间有一个石子（后面的石子可能就被移动不在中间了），你每次在一个房间里的时候可以把石子放到一条通道的左边或者右边，然后选择一条通道走出去。这里因为通道长得一样，所以你的参照物是石子，你放置石子或者走通道只能够说”我选择我刚进入这个房间的时候房间里面石子的位置顺时针转过多少个通道的那个通道“。你被随机丢到了一个房间里面，你需要遍历这个图。&lt;/p&gt;

&lt;p&gt;然后就是Tarjan改版，记一下返祖边和横叉边。&lt;/p&gt;

&lt;p&gt;还有后面比赛的题目，有一颗树，一开始只有 $1$ 已知，每一次你需要选择一个已知点 $x$ 和一个点 $y$ ，然后交互库会返回 $x$ 到 $y$ 路径上离 $x$ 最近的点 $z$，并且如果 $z$ 是未知点，它就会被标记成已知点（开地图过程）。然后你需要用 $nlogn$ 级别的操作次数开完整个地图。&lt;/p&gt;

&lt;p&gt;利用替罪羊树的重构思想可以高分甚至 $AC$。&lt;/p&gt;

&lt;h3 id=&quot;section-5&quot;&gt;一些长得像“树上最长链”一样的问题的近似求解&lt;/h3&gt;

&lt;p&gt;可以使用类似于找最长链的方法，找一个基准点，找到离它最远的点，接着以这个点为基准点重复上面的操作，多次迭代，并且多选几次基准点，就有可能跑出优秀的解。&lt;/p&gt;

&lt;h3 id=&quot;etc&quot;&gt;etc…&lt;/h3&gt;

&lt;p&gt;然后学着学着就比赛了，比赛的时候T2看错题意，居然直接过了大样例，出考场完听别人说题面出锅了我才发现自己看错了题意。于是就因为这个看错题意节省了一堆时间，但是最后T1还是有12分暴力没调出来，最后就滚粗了。而且感觉自己预支了省选的RP[害怕.jpg]。&lt;/p&gt;
</description>
        <pubDate>Thu, 08 Feb 2018 00:00:00 +0800</pubDate>
        <link>https://alphagem.github.io/2018/02/08/NOIWC2018%E6%B8%B8%E8%AE%B0.html</link>
        <guid isPermaLink="true">https://alphagem.github.io/2018/02/08/NOIWC2018%E6%B8%B8%E8%AE%B0.html</guid>
        
        <category>信息竞赛</category>
        
        <category>NOIWC2018</category>
        
        
        <category>OI</category>
        
      </item>
    
  </channel>
</rss>
